{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_project\\\\frontend\\\\src\\\\components\\\\signin-up\\\\login.jsx\",\n  _s = $RefreshSig$();\n// Importing required components\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\n// Creating login component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // Usesate hooks which initializs state value as an empty string\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"input-field\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input-field\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 154\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logbtn\",\n        class: \"login-btn\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have account \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Register here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n\n//   // HandleLogin function which store user login credentials and calls the backend to check wheather they are registered users or not and based respponse\n//   // From server if the user exists then it navigates to user profile page and displays their data \n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     try {\n\n//       // Calling backend server here\n//       const response = await fetch('http://localhost:3000/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n\n//         //passing login credentials to server for validation\n//         body: JSON.stringify({ email, password }),\n//       });\n\n//       // If response ok (user registered or exist) navigates to profile page\n//       if (response.ok) {\n//         const userData = await response.json();\n//         navigate('/profile', { state: { user: userData } });\n\n//       } else {\n//         const errorData = await response.json();\n//         console.error('Error logging in:', errorData.error);\n//       }\n\n//     }\n\n//     // Catching occuring error\n//     catch (error) {\n//       console.error('Error logging in:', error);\n//     }\n//   };\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","class","to","_c","$RefreshReg$"],"sources":["D:/react_project/frontend/src/components/signin-up/login.jsx"],"sourcesContent":["// Importing required components\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\n// Creating login component\r\nconst Login = () => {\r\n\r\n  // Usesate hooks which initializs state value as an empty string\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"auth-form\">\r\n        <h2>Sign In</h2>\r\n      <form className='login-form-container'>\r\n        <input type=\"email\" className= \"input-field\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n        <input type=\"password\" className= \"input-field\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required /><br/>\r\n        <button className='logbtn' class=\"login-btn\" type=\"submit\">Login</button>\r\n        <p>Don't have account <Link to=\"/signup\">Register here</ Link></p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//   // HandleLogin function which store user login credentials and calls the backend to check wheather they are registered users or not and based respponse\r\n//   // From server if the user exists then it navigates to user profile page and displays their data \r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n\r\n//       // Calling backend server here\r\n//       const response = await fetch('http://localhost:3000/login', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n\r\n//         //passing login credentials to server for validation\r\n//         body: JSON.stringify({ email, password }),\r\n//       });\r\n\r\n//       // If response ok (user registered or exist) navigates to profile page\r\n//       if (response.ok) {\r\n//         const userData = await response.json();\r\n//         navigate('/profile', { state: { user: userData } });\r\n\r\n//       } else {\r\n//         const errorData = await response.json();\r\n//         console.error('Error logging in:', errorData.error);\r\n//       }\r\n\r\n//     }\r\n\r\n//     // Catching occuring error\r\n//     catch (error) {\r\n//       console.error('Error logging in:', error);\r\n//     }\r\n//   };"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,oBACEE,OAAA;IAAKQ,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBT,OAAA;MAAAS,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBb,OAAA;MAAMQ,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACpCT,OAAA;QAAOc,IAAI,EAAC,OAAO;QAACN,SAAS,EAAE,aAAa;QAACO,WAAW,EAAC,OAAO;QAACC,KAAK,EAAEb,KAAM;QAACc,QAAQ,EAAGC,CAAC,IAAKd,QAAQ,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrIb,OAAA;QAAOc,IAAI,EAAC,UAAU;QAACN,SAAS,EAAE,aAAa;QAACO,WAAW,EAAC,UAAU;QAACC,KAAK,EAAEX,QAAS;QAACY,QAAQ,EAAGC,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAAAb,OAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtJb,OAAA;QAAQQ,SAAS,EAAC,QAAQ;QAACa,KAAK,EAAC,WAAW;QAACP,IAAI,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzEb,OAAA;QAAAS,QAAA,GAAG,qBAAmB,eAAAT,OAAA,CAACH,IAAI;UAACyB,EAAE,EAAC,SAAS;UAAAb,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACX,EAAA,CAlBID,KAAK;EAAA,QAKQH,WAAW;AAAA;AAAAyB,EAAA,GALxBtB,KAAK;AAoBX,eAAeA,KAAK;;AAgCpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}