{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HS\\\\Desktop\\\\Project\\\\react_project\\\\frontend\\\\src\\\\components\\\\calendar\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\n/* Import Section - Start */\n\nimport React, { useEffect, useState } from \"react\";\nimport Fullcalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport axios from \"axios\";\n\n/* React Imports -End */\n\n/* Import Section - End */\n\n/* Function - Start */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [eventdata, setEventdata] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [isLoading, setIsLoading] = useState(true); // Add a loading state\n\n  useEffect(() => {\n    console.log(\"OBJ->\", selectedCategory);\n    axios.get(`http://localhost:8080/eventdata/${selectedCategory}`).then(response => {\n      setEventdata(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching events:\", error);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }, [selectedCategory]);\n\n  //  For DropDown\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n    console.log(selectedCategory);\n  };\n\n  /* Render View Return - Start */\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"calendar-area\">    \n    //   <div className=\"calendar-table\"\n    //     // style={{\n    //     //   textAlign: \"center\",\n    //     //   position: \"relative\",\n    //     //   marginTop: \"-93vh\",\n    //     //   width: \"68vw\",\n    //     //   marginLeft: \"1vw\",\n    //     // }}\n    //   >\n    //     {isLoading ? ( // Display loading indicator while fetching data\n    //       <ClipLoader color={'black'} size={50} />\n    //     ) : (\n    //       <Fullcalendar\n    //         plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n    //         events={eventdata.map((item) => ({\n    //           title: item.title,\n    //           allday: (((item.starttime.split('T')[1]).split('.')[0]) === ((item.endtime.split('T')[1]).split('.')[0])) ? true : false,\n    //           start: (((item.starttime.split('T')[1]) === ((item.endtime.split('T')[1])))) ? item.startdate :\n    //             item.startdate.concat('T'.concat((item.starttime.split('T')[1]).split('.')[0])),\n    //           // Festival:#2596be\n    //           // Bithday: 'purple'\n    //           // Meetings: #ca4f89\n    //           // others: #242464\n    //           // Holiday: red\n    //           // start:item.startdate,\n    //           end: item.enddate,\n    //           backgroundColor: item.eventtype === 'Birthday' ? 'purple' :\n    //             item.eventtype === 'Meeting' ? '#ca4f89' :\n    //               item.eventtype === 'Holiday' ? 'red' :\n    //                 item.eventtype === 'Festival' ? '#2596be' : '#242464',\n    //         }))}\n    //         initialView={\"dayGridMonth\"}\n    //         headerToolbar={{\n    //           start: \"today prev,next\", // will normally be on the left. if RTL, will be on the right\n    //           center: \"title\",\n    //           end: \"dayGridMonth,timeGridWeek,timeGridDay\", // will normally be on the right. if RTL, will be on the left\n    //         }}\n    //         height={\"90vh\"}\n    //       />\n    //     )}\n    //     {/* {evtDet && ( <div className=\"event-details\"><p>{evtDet.title}</p> </div> )} */}\n    //   </div>\n    //   {isLoading ? ( // Display loading indicator while fetching data\n    //     <></>\n    //   ) : (\n    //     <div className=\"calendar-dropdownFilter\">\n    //       <select id=\"category\" onChange={handleCategoryChange} value={selectedCategory}>\n    //         <option value=\"All\" >ALL</option>\n    //         <option value=\"Holiday\">Holiday</option>\n    //         <option value=\"Event\">Event</option>\n    //         <option value=\"Birthday\">Birthday</option>\n    //         <option value=\"Festival\" >Festival</option>\n    //         <option value=\"Others\">Others</option>\n    //       </select>\n    //       <i className=\"fa-solid fa-filter\"></i>\n    //     </div>\n    //     )}\n    // </div>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  );\n\n  /* Render View Return - End */\n};\n\n/* Function - End */\n\n/* Export default functionName */\n_s(Calendar, \"izyvZG7MyMKgdpGAAiUIKyOLEVo=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useEffect","useState","Fullcalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","ClipLoader","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Calendar","_s","eventdata","setEventdata","selectedCategory","setSelectedCategory","isLoading","setIsLoading","console","log","get","then","response","data","catch","error","finally","handleCategoryChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HS/Desktop/Project/react_project/frontend/src/components/calendar/Calendar.jsx"],"sourcesContent":["/* Import Section - Start */\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Fullcalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport axios from \"axios\";\r\n\r\n/* React Imports -End */\r\n\r\n/* Import Section - End */\r\n\r\n\r\n/* Function - Start */\r\n\r\nconst Calendar = () => {\r\n  const [eventdata, setEventdata] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('All');\r\n  const [isLoading, setIsLoading] = useState(true); // Add a loading state\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"OBJ->\", selectedCategory);\r\n\r\n    axios\r\n      .get(`http://localhost:8080/eventdata/${selectedCategory}`)\r\n      .then((response) => {\r\n        setEventdata(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching events:\", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [selectedCategory]);\r\n\r\n  //  For DropDown\r\n  const handleCategoryChange = (event) => {\r\n    setSelectedCategory(event.target.value);\r\n    console.log(selectedCategory);\r\n\r\n  };\r\n\r\n/* Render View Return - Start */\r\n\r\n  return (\r\n    // <div className=\"calendar-area\">    \r\n    //   <div className=\"calendar-table\"\r\n    //     // style={{\r\n    //     //   textAlign: \"center\",\r\n    //     //   position: \"relative\",\r\n    //     //   marginTop: \"-93vh\",\r\n    //     //   width: \"68vw\",\r\n    //     //   marginLeft: \"1vw\",\r\n    //     // }}\r\n    //   >\r\n    //     {isLoading ? ( // Display loading indicator while fetching data\r\n    //       <ClipLoader color={'black'} size={50} />\r\n    //     ) : (\r\n    //       <Fullcalendar\r\n    //         plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n    //         events={eventdata.map((item) => ({\r\n    //           title: item.title,\r\n    //           allday: (((item.starttime.split('T')[1]).split('.')[0]) === ((item.endtime.split('T')[1]).split('.')[0])) ? true : false,\r\n    //           start: (((item.starttime.split('T')[1]) === ((item.endtime.split('T')[1])))) ? item.startdate :\r\n    //             item.startdate.concat('T'.concat((item.starttime.split('T')[1]).split('.')[0])),\r\n    //           // Festival:#2596be\r\n    //           // Bithday: 'purple'\r\n    //           // Meetings: #ca4f89\r\n    //           // others: #242464\r\n    //           // Holiday: red\r\n    //           // start:item.startdate,\r\n    //           end: item.enddate,\r\n    //           backgroundColor: item.eventtype === 'Birthday' ? 'purple' :\r\n    //             item.eventtype === 'Meeting' ? '#ca4f89' :\r\n    //               item.eventtype === 'Holiday' ? 'red' :\r\n    //                 item.eventtype === 'Festival' ? '#2596be' : '#242464',\r\n    //         }))}\r\n\r\n    //         initialView={\"dayGridMonth\"}\r\n    //         headerToolbar={{\r\n    //           start: \"today prev,next\", // will normally be on the left. if RTL, will be on the right\r\n    //           center: \"title\",\r\n    //           end: \"dayGridMonth,timeGridWeek,timeGridDay\", // will normally be on the right. if RTL, will be on the left\r\n    //         }}\r\n    //         height={\"90vh\"}\r\n    //       />\r\n\r\n    //     )}\r\n\r\n    //     {/* {evtDet && ( <div className=\"event-details\"><p>{evtDet.title}</p> </div> )} */}\r\n\r\n    //   </div>\r\n    //   {isLoading ? ( // Display loading indicator while fetching data\r\n    //     <></>\r\n    //   ) : (\r\n    //     <div className=\"calendar-dropdownFilter\">\r\n    //       <select id=\"category\" onChange={handleCategoryChange} value={selectedCategory}>\r\n    //         <option value=\"All\" >ALL</option>\r\n    //         <option value=\"Holiday\">Holiday</option>\r\n    //         <option value=\"Event\">Event</option>\r\n    //         <option value=\"Birthday\">Birthday</option>\r\n    //         <option value=\"Festival\" >Festival</option>\r\n    //         <option value=\"Others\">Others</option>\r\n    //       </select>\r\n    //       <i className=\"fa-solid fa-filter\"></i>\r\n    //     </div>\r\n    //     )}\r\n    // </div>\r\n    <>\r\n      <p></p>\r\n    </>\r\n  )\r\n\r\n/* Render View Return - End */\r\n}\r\n\r\n/* Function - End */\r\n\r\n/* Export default functionName */\r\n\r\nexport default Calendar;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;AAEA;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAGlDD,SAAS,CAAC,MAAM;IACdoB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEL,gBAAgB,CAAC;IAEtCT,KAAK,CACFe,GAAG,CAAE,mCAAkCN,gBAAiB,EAAC,CAAC,CAC1DO,IAAI,CAAEC,QAAQ,IAAK;MAClBT,YAAY,CAACS,QAAQ,CAACC,IAAI,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBP,OAAO,CAACO,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACbT,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,CAACH,gBAAgB,CAAC,CAAC;;EAEtB;EACA,MAAMa,oBAAoB,GAAIC,KAAK,IAAK;IACtCb,mBAAmB,CAACa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACvCZ,OAAO,CAACC,GAAG,CAACL,gBAAgB,CAAC;EAE/B,CAAC;;EAEH;;EAEE;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAEA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAP,OAAA,CAAAE,SAAA;MAAAsB,QAAA,eACExB,OAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC,gBACP;EAAC;;EAGP;AACA,CAAC;;AAED;;AAEA;AAAAxB,EAAA,CAzGMD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA2Gd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}