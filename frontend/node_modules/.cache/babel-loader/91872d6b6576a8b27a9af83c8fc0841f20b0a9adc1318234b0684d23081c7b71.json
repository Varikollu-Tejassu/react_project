{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HS\\\\Desktop\\\\Project\\\\react_project\\\\frontend\\\\src\\\\components\\\\calendar\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\n/* Import Section - Start */\n\nimport React, { useEffect, useState } from \"react\";\nimport Fullcalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport axios from \"axios\";\n\n/* React Imports -End */\n\n/* Import Section - End */\n\n/* Function - Start */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [eventdata, setEventdata] = useState < any > [];\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [isLoading, setIsLoading] = useState(true); // Add a loading state\n\n  useEffect(() => {\n    console.log(\"OBJ->\", selectedCategory);\n    axios.get(`http://localhost:8080/eventdata/${selectedCategory}`).then(response => {\n      setEventdata(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching events:\", error);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }, [selectedCategory]);\n\n  //  For DropDown\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n    console.log(selectedCategory);\n  };\n\n  /* Render View Return - Start */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n\n  /* Render View Return - End */\n};\n\n/* Function - End */\n\n/* Export default functionName */\n_s(Calendar, \"MmcVC4hDmYmyL8fdit+RwacAmWE=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useEffect","useState","Fullcalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","ClipLoader","axios","jsxDEV","_jsxDEV","Calendar","_s","eventdata","setEventdata","any","selectedCategory","setSelectedCategory","isLoading","setIsLoading","console","log","get","then","response","data","catch","error","finally","handleCategoryChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HS/Desktop/Project/react_project/frontend/src/components/calendar/Calendar.jsx"],"sourcesContent":["/* Import Section - Start */\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Fullcalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport axios from \"axios\";\r\n\r\n/* React Imports -End */\r\n\r\n/* Import Section - End */\r\n\r\n\r\n/* Function - Start */\r\n\r\nconst Calendar = () => {\r\n  const [eventdata, setEventdata] = useState<any>([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('All');\r\n  const [isLoading, setIsLoading] = useState(true); // Add a loading state\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"OBJ->\", selectedCategory);\r\n\r\n    axios\r\n      .get(`http://localhost:8080/eventdata/${selectedCategory}`)\r\n      .then((response) => {\r\n        setEventdata(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching events:\", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [selectedCategory]);\r\n\r\n  //  For DropDown\r\n  const handleCategoryChange = (event: any) => {\r\n    setSelectedCategory(event.target.value);\r\n    console.log(selectedCategory);\r\n\r\n  };\r\n\r\n/* Render View Return - Start */\r\n\r\n  return (\r\n    <div>\r\n\r\n\r\n    </div>\r\n  )\r\n\r\n/* Render View Return - End */\r\n}\r\n\r\n/* Function - End */\r\n\r\n/* Export default functionName */\r\n\r\nexport default Calendar;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;AAEA;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,GAACa,GAAG,GAAE,EAAG;EACnD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAGlDD,SAAS,CAAC,MAAM;IACdmB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEL,gBAAgB,CAAC;IAEtCR,KAAK,CACFc,GAAG,CAAE,mCAAkCN,gBAAiB,EAAC,CAAC,CAC1DO,IAAI,CAAEC,QAAQ,IAAK;MAClBV,YAAY,CAACU,QAAQ,CAACC,IAAI,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBP,OAAO,CAACO,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACbT,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,CAACH,gBAAgB,CAAC,CAAC;;EAEtB;EACA,MAAMa,oBAAoB,GAAIC,KAAU,IAAK;IAC3Cb,mBAAmB,CAACa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACvCZ,OAAO,CAACC,GAAG,CAACL,gBAAgB,CAAC;EAE/B,CAAC;;EAEH;;EAEE,oBACEN,OAAA;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGK,CAAC;;EAGV;AACA,CAAC;;AAED;;AAEA;AAAAxB,EAAA,CA3CMD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}