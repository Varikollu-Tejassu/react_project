{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-my-component\\\\react_project\\\\frontend\\\\src\\\\components\\\\signin-up\\\\login.jsx\",\n  _s = $RefreshSig$();\n// Importing required components\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport logo from \"../../assets/images/login_bg.png\";\n// Creating login component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // Usesate hooks which initializs state value as an empty string\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  function checkBreakpoint() {\n    if (window.matchMedia('(max-width: 600px)').matches) {\n      console.log(document.getElementById('my-div'));\n      // document.getElementById('my-div').classname.remove('login-image-container');\n      // document.getElementById('my-div').classname.add('new');\n    }\n    // else {\n    //   document.getElementById('my-div').classname.remove('new');\n    //   document.getElementById('my-div').classname.add('login-image-container');\n    // }\n  }\n\n  window.addEventListener('resize', checkBreakpoint);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-image-container\",\n      id: \"my-div\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"input-field\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"input-field\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 154\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logbtn\",\n          class: \"login-btn\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have account \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: \"Register here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n\n//   // HandleLogin function which store user login credentials and calls the backend to check wheather they are registered users or not and based respponse\n//   // From server if the user exists then it navigates to user profile page and displays their data \n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     try {\n\n//       // Calling backend server here\n//       const response = await fetch('http://localhost:3000/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n\n//         //passing login credentials to server for validation\n//         body: JSON.stringify({ email, password }),\n//       });\n\n//       // If response ok (user registered or exist) navigates to profile page\n//       if (response.ok) {\n//         const userData = await response.json();\n//         navigate('/profile', { state: { user: userData } });\n\n//       } else {\n//         const errorData = await response.json();\n//         console.error('Error logging in:', errorData.error);\n//       }\n\n//     }\n\n//     // Catching occuring error\n//     catch (error) {\n//       console.error('Error logging in:', error);\n//     }\n//   };\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","logo","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","checkBreakpoint","window","matchMedia","matches","console","log","document","getElementById","addEventListener","className","children","id","src","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","class","to","_c","$RefreshReg$"],"sources":["C:/react-my-component/react_project/frontend/src/components/signin-up/login.jsx"],"sourcesContent":["// Importing required components\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nimport logo from \"../../assets/images/login_bg.png\"\r\n// Creating login component\r\nconst Login = () => {\r\n\r\n  // Usesate hooks which initializs state value as an empty string\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  function checkBreakpoint() {\r\n    if (window.matchMedia('(max-width: 600px)').matches) {\r\n      console.log(document.getElementById('my-div'))\r\n      // document.getElementById('my-div').classname.remove('login-image-container');\r\n      // document.getElementById('my-div').classname.add('new');\r\n    } \r\n    // else {\r\n    //   document.getElementById('my-div').classname.remove('new');\r\n    //   document.getElementById('my-div').classname.add('login-image-container');\r\n    // }\r\n  }\r\n  \r\n  window.addEventListener('resize', checkBreakpoint);\r\n  \r\n\r\n  return (\r\n    <div  className =\"login-container\" >\r\n    <div className='login-image-container' id=\"my-div\"> \r\n        <img src={logo} />\r\n    </div>\r\n    <div className=\"login-form\">\r\n      <form className='login-form-container'>\r\n         <h2>Sign In</h2>\r\n        <input type=\"email\" className= \"input-field\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n        <input type=\"password\" className= \"input-field\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required /><br/>\r\n        <button className='logbtn' class=\"login-btn\" type=\"submit\">Login</button>\r\n        <p>Don't have account <Link to=\"/signup\">Register here</ Link></p>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//   // HandleLogin function which store user login credentials and calls the backend to check wheather they are registered users or not and based respponse\r\n//   // From server if the user exists then it navigates to user profile page and displays their data \r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n\r\n//       // Calling backend server here\r\n//       const response = await fetch('http://localhost:3000/login', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n\r\n//         //passing login credentials to server for validation\r\n//         body: JSON.stringify({ email, password }),\r\n//       });\r\n\r\n//       // If response ok (user registered or exist) navigates to profile page\r\n//       if (response.ok) {\r\n//         const userData = await response.json();\r\n//         navigate('/profile', { state: { user: userData } });\r\n\r\n//       } else {\r\n//         const errorData = await response.json();\r\n//         console.error('Error logging in:', errorData.error);\r\n//       }\r\n\r\n//     }\r\n\r\n//     // Catching occuring error\r\n//     catch (error) {\r\n//       console.error('Error logging in:', error);\r\n//     }\r\n//   };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}