[{"C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\index.js":"1","C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\App.js":"2","C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\layout\\Layout.jsx":"4","C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\signin-up\\login.jsx":"5","C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\signin-up\\Signup.jsx":"6","C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\calendar\\Calendar.jsx":"7","C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\profile\\Profile.jsx":"8","C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\manageEvents\\ManageEvents.jsx":"9","C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\projectAllocation\\ProjectAllocation.jsx":"10","C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\layout\\Sidebar.jsx":"11","C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\services\\calendar\\CalendarService.jsx":"12"},{"size":550,"mtime":1694407798006,"results":"13","hashOfConfig":"14"},{"size":1508,"mtime":1694407797993,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1694407665152,"results":"16","hashOfConfig":"14"},{"size":511,"mtime":1694408131483,"results":"17","hashOfConfig":"14"},{"size":1438,"mtime":1694407798005,"results":"18","hashOfConfig":"14"},{"size":3657,"mtime":1694407798004,"results":"19","hashOfConfig":"14"},{"size":4865,"mtime":1694430562660,"results":"20","hashOfConfig":"14"},{"size":413,"mtime":1694407665149,"results":"21","hashOfConfig":"14"},{"size":430,"mtime":1694407665148,"results":"22","hashOfConfig":"14"},{"size":435,"mtime":1694407665149,"results":"23","hashOfConfig":"14"},{"size":4600,"mtime":1694407798003,"results":"24","hashOfConfig":"14"},{"size":242,"mtime":1694427159325,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fkf0oa",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":7,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\index.js",[],[],"C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\App.js",[],[],"C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\layout\\Layout.jsx",[],[],[],"C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\signin-up\\login.jsx",["67","68"],[],"/* Import Section - Start */\r\n\r\n/* React Imports - Start */\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport logo from \"../../assets/images/login_bg.png\"\r\n\r\n\r\n/* React Imports -End */\r\n\r\n/* Import Section - End */\r\n\r\n\r\n/* Function - Start */\r\nconst Login = () => {\r\n\r\n    // Usesate hooks which initializs state value as an empty string\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n  /* Render View Return - Start */\r\n\r\n  return (\r\n    <div  className =\"login-container\" >\r\n    <div className='login-image-container'> \r\n        <img src={logo} />\r\n    </div>\r\n    <div className=\"login-form\">\r\n      <form className='login-form-container'>\r\n         <h2>Sign In</h2>\r\n        <input type=\"email\" className= \"input-field\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n        <input type=\"password\" className= \"input-field\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required /><br/>\r\n        <button className='logbtn' class=\"login-btn\" type=\"submit\">Login</button>\r\n        <p>Don't have account <Link to=\"/signup\">Register here</ Link></p>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  )\r\n\r\n  /* Render View Return - End */\r\n}\r\n/* Function - End */\r\nexport default Login;\r\n/* Export default functionName */","C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\signin-up\\Signup.jsx",["69","70"],[],"// Importing required components\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport logo from \"../../assets/images/login_bg.png\";\r\n\r\n// Creating signup component\r\nconst Signup = () => {\r\n  // Usesate hooks which initializs state value as an empty string\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [passwordsMatch, setPasswordsMatch] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  // Handlesignup function which performs some validations and calls backend server for storing data in database\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmpassword) {\r\n      console.error(\"password and confirm password din't matched\");\r\n      alert(\"password and confirm password did'nt match\");\r\n      setPasswordsMatch(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Calling backend server here\r\n      const response = await fetch(\"http://localhost:3000/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n\r\n        // Passing user data to the server\r\n        body: JSON.stringify({ name, email, password, dob }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(\"Signed up successfully with ID:\", data.id);\r\n      alert(\"Registration successful\");\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      // Catching occurring\r\n      console.error(\"Error signing up:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-image-container2\">\r\n        <img src={logo} />\r\n      </div>\r\n      <div className=\"login-form2\">\r\n        <form className=\"login-form-container2\">\r\n          <h2>Sign Up</h2>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-field\"\r\n            placeholder=\"Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            className=\"input-field\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            className=\"input-field\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            className=\"input-field\"\r\n            placeholder=\"date of birth\"\r\n            value={dob}\r\n            onChange={(e) => setDob(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            className=\"input-field\"\r\n            placeholder=\" Confirm Password\"\r\n            value={confirmpassword}\r\n            onChange={(e) => {\r\n              setConfirmPassword(e.target.value);\r\n              setPasswordsMatch(e.target.value === password);\r\n            }}\r\n            required\r\n          />\r\n          {!passwordsMatch && (\r\n            <p style={{ color: \"red\" }}>Password did'nt matched</p>\r\n          )}\r\n          <button type=\"submit\" class=\"login-btn\">\r\n            Sign Up\r\n          </button>\r\n          <br />\r\n          <p>\r\n            Already have an account <Link to=\"/\">Click here</Link>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\calendar\\Calendar.jsx",["71","72","73","74","75","76","77","78","79","80"],[],"/* Import Section - Start */\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Fullcalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport calServices from \"../../services/calendar/CalendarService\";\r\n\r\n/* React Imports -End */\r\n\r\n/* Import Section - End */\r\n\r\n/* Function - Start */\r\n\r\nconst Calendar = () => {\r\n  // const [eventdata, setEventdata] = useState([]);\r\n  // const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n  // const [isLoading, setIsLoading] = useState(true); // Add a loading state\r\n\r\n  // const getSelectedCategory = () => {\r\n  //   calServices\r\n  //     .selectedCategory(selectedCategory)\r\n  //     .then((response) => {\r\n  //       setEventdata(response.data);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       throw error;\r\n  //     })\r\n  //     .finally(() => {\r\n  //       setIsLoading(false);\r\n  //     });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getSelectedCategory();\r\n  // }, [selectedCategory]);\r\n\r\n  //  For DropDown\r\n\r\n  const handleCategoryChange = (event) => {\r\n    setSelectedCategory(event.target.value);\r\n    console.log(selectedCategory);\r\n  };\r\n\r\n  /* Render View Return - Start */\r\n\r\n  return (\r\n    <div className=\"calendar-area\">\r\n      <div className=\"calendar-table\">\r\n        <div className=\"dashboard-header\">Events</div>\r\n        {isLoading ? ( // Display loading indicator while fetching data\r\n          <ClipLoader color={\"black\"} size={50} />\r\n        ) : (\r\n          <Fullcalendar\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n            events={eventdata.map((item) => ({\r\n              title: item.title,\r\n              allday:\r\n                item.starttime.split(\"T\")[1].split(\".\")[0] ===\r\n                item.endtime.split(\"T\")[1].split(\".\")[0]\r\n                  ? true\r\n                  : false,\r\n              start:\r\n                item.starttime.split(\"T\")[1] === item.endtime.split(\"T\")[1]\r\n                  ? item.startdate\r\n                  : item.startdate.concat(\r\n                      \"T\".concat(item.starttime.split(\"T\")[1].split(\".\")[0])\r\n                    ),\r\n              // Festival:#2596be\r\n              // Bithday: 'purple'\r\n              // Meetings: #ca4f89\r\n              // others: #242464\r\n              // Holiday: red\r\n              // start:item.startdate,\r\n              end: item.enddate,\r\n              backgroundColor:\r\n                item.eventtype === \"Birthday\"\r\n                  ? \"purple\"\r\n                  : item.eventtype === \"Meeting\"\r\n                  ? \"#ca4f89\"\r\n                  : item.eventtype === \"Holiday\"\r\n                  ? \"red\"\r\n                  : item.eventtype === \"Festival\"\r\n                  ? \"#2596be\"\r\n                  : \"#242464\",\r\n            }))}\r\n            initialView={\"dayGridMonth\"}\r\n            headerToolbar={{\r\n              start: \"today prev,next\", // will normally be on the left. if RTL, will be on the right\r\n              center: \"title\",\r\n              end: \"dayGridMonth,timeGridWeek,timeGridDay\", // will normally be on the right. if RTL, will be on the left\r\n            }}\r\n            height={\"90vh\"}\r\n          />\r\n        )}\r\n      </div>\r\n      {isLoading ? (\r\n        \"\"\r\n      ) : (\r\n        <div className=\"calendar-dropdown-area\">\r\n          {isLoading ? (\r\n            <></>\r\n          ) : (\r\n            <div className=\"calendar-dropdownFilter\">\r\n              <select\r\n                id=\"category\"\r\n                onChange={handleCategoryChange}\r\n                value={selectedCategory}\r\n              >\r\n                <option value=\"All\">ALL</option>\r\n                <option value=\"Holiday\">Holiday</option>\r\n                <option value=\"Event\">Event</option>\r\n                <option value=\"Birthday\">Birthday</option>\r\n                <option value=\"Festival\">Festival</option>\r\n                <option value=\"Others\">Others</option>\r\n              </select>\r\n              <i className=\"fa-solid fa-filter\"></i>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"calendar-dropdown-details\">\r\n            <p className=\"calendar-dropdown-details-header\">Upcoming Events</p>\r\n            <div className=\"calendar-dropdown-eventdata\">\r\n              dropdownFilter data\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"calendar-event-area\">\r\n            <p className=\"calendar-event-area-header\">Events Details</p>\r\n            <div className=\"calendar-event-selecteddata\">selected data</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  /* Render View Return - End */\r\n};\r\n\r\n/* Function - End */\r\n\r\n/* Export default functionName */\r\n\r\nexport default Calendar;\r\n","C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\profile\\Profile.jsx",[],[],"C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\manageEvents\\ManageEvents.jsx",[],[],"C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\projectAllocation\\ProjectAllocation.jsx",[],[],"C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\components\\layout\\Sidebar.jsx",[],[],"C:\\Users\\HimanshuSoni\\Desktop\\New folder\\hbranch\\frontend\\src\\services\\calendar\\CalendarService.jsx",["81"],[],"import axios from \"axios\";\r\n\r\nlet base_url = process.env.REACT_APP_API_URL;\r\n\r\nasync function selectedCategory(cred){\r\n    let response = await axios.post(`${base_url}/${cred}`);\r\n    return response;\r\n}\r\n\r\n\r\nexport default {selectedCategory}",{"ruleId":"82","severity":1,"message":"83","line":20,"column":11,"nodeType":"84","messageId":"85","endLine":20,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":27,"column":9,"nodeType":"88","endLine":27,"endColumn":27},{"ruleId":"82","severity":1,"message":"89","line":18,"column":9,"nodeType":"84","messageId":"85","endLine":18,"endColumn":21},{"ruleId":"86","severity":1,"message":"87","line":53,"column":9,"nodeType":"88","endLine":53,"endColumn":27},{"ruleId":"82","severity":1,"message":"90","line":3,"column":17,"nodeType":"84","messageId":"85","endLine":3,"endColumn":26},{"ruleId":"82","severity":1,"message":"91","line":3,"column":28,"nodeType":"84","messageId":"85","endLine":3,"endColumn":36},{"ruleId":"82","severity":1,"message":"92","line":9,"column":8,"nodeType":"84","messageId":"85","endLine":9,"endColumn":19},{"ruleId":"93","severity":2,"message":"94","line":43,"column":5,"nodeType":"84","messageId":"95","endLine":43,"endColumn":24},{"ruleId":"93","severity":2,"message":"96","line":44,"column":17,"nodeType":"84","messageId":"95","endLine":44,"endColumn":33},{"ruleId":"93","severity":2,"message":"97","line":53,"column":10,"nodeType":"84","messageId":"95","endLine":53,"endColumn":19},{"ruleId":"93","severity":2,"message":"98","line":58,"column":21,"nodeType":"84","messageId":"95","endLine":58,"endColumn":30},{"ruleId":"93","severity":2,"message":"97","line":99,"column":8,"nodeType":"84","messageId":"95","endLine":99,"endColumn":17},{"ruleId":"93","severity":2,"message":"97","line":103,"column":12,"nodeType":"84","messageId":"95","endLine":103,"endColumn":21},{"ruleId":"93","severity":2,"message":"96","line":110,"column":24,"nodeType":"84","messageId":"95","endLine":110,"endColumn":40},{"ruleId":"99","severity":1,"message":"100","line":11,"column":1,"nodeType":"101","endLine":11,"endColumn":34},"no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'handleSignUp' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'calServices' is defined but never used.","no-undef","'setSelectedCategory' is not defined.","undef","'selectedCategory' is not defined.","'isLoading' is not defined.","'eventdata' is not defined.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]